version: '3.9'

services:
  web:
    build:
      context: .
    container_name: web
    image: core:latest
    restart: always
   
    env_file:
      - .env.prod
    depends_on:
      - postgres
      - redis
    # volumes:
    #   - static_volume:/staticfiles
    #   - media_volume:/media
    volumes:
      - ./entrypoint.sh:/entrypoint.sh
      - /home/dcl/staticfiles:/staticfiles
      - /home/dcl/media:/media
    ports:  
      - "8085:8085"  
    expose:
      - "8085"
    entrypoint: ["sh", "/entrypoint.sh"]

  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   restart: always
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/conf.d:/etc/nginx/conf.d
  #     - static_volume:/staticfiles
  #     - media_volume:/media
  #     - /etc/cloudflare:/etc/cloudflare
  #   depends_on:
  #     - web
  #   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  postgres:
    image: postgres:latest
    container_name: postgres
    env_file:
      - .env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5434:5432"  # Map host port 5433 to container port 5432
    expose:
      - "5432"  # Still expose for inter-container communication

  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - redis_data:/data
    env_file:
      - .env.prod
    ports:
      - "5433:5432"  # Map host port 5433 to container port 5432
    expose:
      - "5432"  # Still expose for inter-container communication

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: